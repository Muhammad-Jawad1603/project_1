version: 0.2

phases:
  install:
    commands:
      - yum update -y
      - yum install -y docker jq

  pre_build:
    commands:
      - echo "🔍 Ensuring deployment files exist..."
      - test -f appspec.yml && echo "✅ appspec.yml exists" || echo "❌ MISSING: appspec.yml"
      - test -d scripts && echo "✅ scripts/ exists" || echo "❌ MISSING: scripts/"
      - ls -lah scripts/
      - echo "Checking AWS credentials..."
      - aws sts get-caller-identity
      - echo "🔐 Logging in to Amazon ECR..."
      - export AWS_REGION="eu-west-1"
      - export AWS_ACCOUNT_ID="099199746132"
      - export REPO_NAME="demo_repo"
      - export REPO_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPO_URI
      - echo "📦 Installing dependencies..."
      - npm install

  build:
    commands:
      - echo "🐳 Building Docker image..."
      - docker build -t $REPO_URI:latest .
      - echo "🏷 Tagging Docker image..."
      - export IMAGE_TAG=$(date +%Y%m%d%H%M%S)
      - docker tag $REPO_URI:latest $REPO_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "🛠 Checking build directory..."
      - ls -R
      - echo "🚀 Pushing Docker images to ECR..."
      - docker push $REPO_URI:latest
      - docker push $REPO_URI:$IMAGE_TAG
      - echo "📂 Copying deployment files to 'output/' for artifacts..."
      - mkdir -p output/scripts
      - cp appspec.yml output/
      - cp -r scripts/* output/scripts/
      - printf '[{"name":"node","imageUri":"%s"}]' "$REPO_URI:latest" > output/imagedefinitions.json
      - echo "✅ Verifying 'output/' directory contents..."
      - ls -R output/
      - echo "🛠 Manually copying to S3 for debugging..."
      - aws s3 cp --recursive output/ s3://YOUR-S3-BUCKET-NAME/debug-output/

artifacts:
  files:
    - '**/*'
  base-directory: output
  discard-paths: no
