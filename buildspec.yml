version: 0.2

phases:
  install:
    commands:
      - yum update -y
      - yum install -y docker jq # Added jq for parsing JSON if needed
  pre_build:
    commands:
      - echo "Checking AWS credentials..."
      - aws sts get-caller-identity # Debugging IAM role access
      - echo "Logging in to Amazon ECR..."
      - export AWS_REGION="eu-west-1"
      - export AWS_ACCOUNT_ID="099199746132"
      - export REPO_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/demo_repo"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPO_URI
      - echo "Verifying ECR login..."
      - docker info
      - export IMAGE_TAG=$(date +%Y%m%d%H%M%S)
      - echo "Installing dependencies..."
      - npm install
  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t $REPO_URI:$IMAGE_TAG .
      - docker tag $REPO_URI:$IMAGE_TAG $REPO_URI:latest
  post_build:
    commands:
      - echo "Pushing the Docker image to Amazon ECR..."
      - docker push $REPO_URI:$IMAGE_TAG
      - docker push $REPO_URI:latest
      - echo "Writing image definition file..."
      - printf '[{"name":"node","imageUri":"%s"}]' $REPO_URI:latest > imagedefinitions.json
      - cat imagedefinitions.json
      - echo "Triggering deployment to EC2 via CodeDeploy..."
      - aws deploy create-deployment \
          --application-name Demo-node \
          --deployment-group-name Demo-node-deployment  \
          --revision file://imagedefinitions.json \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --region $AWS_REGION

artifacts:
  files:
    - imagedefinitions.json
